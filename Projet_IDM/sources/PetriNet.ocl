import 'PetriNet.ecore'

package petriNet

--context PetriNet


--inv NonNull_petriNetElements('The \'petriNetElements\' property of "' + self.toString() + '" is null'):
	--petriNetElements <> null




--le nom d'une petrinet doit etre valide
context PetriNet
inv validName:
	self.name.matches('[A-Za-z_][A-Za-z0-9_]*')
	
--un arc peut lier qu'une transition et une place
context Arc
inv nodeLinks : if self.source.oclIsKindOf(Transition) then self.target.oclIsKindOf(Place)
				else self.target.oclIsKindOf(Transition)
				endif
				
/*Le debut de l'arc doit etre different de sa fin */
context Arc
inv arcInOut : self.target.oclIsTypeOf(Place) <> self.source.oclIsTypeOf(Place)
				
/* Le marquage initial des places */
context Place
inv nbInitialJetons: self.jetons >= 0



/* Les jetons consommÃ©s d'une noeud vers un autre est non nul */
context Arc
inv jetonsConsom : self.jetons >= 1	

			
endpackage
